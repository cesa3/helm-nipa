apisix:
  replicaCount: 2
  
  resources:
    requests:
      cpu: 200m
      memory: 256Mi
    limits:
      cpu: 1000m
      memory: 512Mi

  serviceNamespace: nipa-travel

metrics:
  enabled: tue
  serviceMonitor:
    enabled: true
    labels:
      # release: prometheus
      monitoring: prometheus-applications
plugins:
  - prometheus # enable prometheus Plugin
  - public-api # enable public-api Plugin
# Prometheus
# serviceMonitor:
#   namespace: nipa-travel
# serviceMonitor:
#   enabled: true
#   namespace: nipa-travel
#   additionalLabels:
#     # release: prometheus
#     monitoring: prometheus-applications
#   interval: 15s

# admin:
#   service:
#     labelsOverride:
#       ingress-monitor: apisix


service:
  labelsOverride:
    app.kubernetes.io/name: "apisix"
    app.kubernetes.io/instance: "{{ .Release.Name }}"

    ingress-monitor: apisix
  type: NodePort

  # HTTP Configuration
  http:
    enabled: true
    servicePort: 80
    containerPort: 9080
    nodePort: 30080
    
  # HTTPS Configuration  
  tls:
    enabled: true
    servicePort: 443
    containerPort: 9443
    nodePort: 30443

# DISABLE the ingress-controller service completely
ingress-controller:
  enabled: true
  replicaCount: 1
  
  # THIS IS THE KEY - Disable the conflicting service
  gateway:
    enable: false
  
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 500m
      memory: 256Mi

  config:
    apisix:
      serviceName: apisix-admin
      servicePort: 9180
      adminKey: "edd1c9f034335f136f87ad84b625c8f1"

prometheus:
  enabled: true

# Dashboard
dashboard:
  enabled: false

# ETCD
etcd:
  enabled: true
  replicaCount: 3
  resources:
    requests:
      cpu: 100m
      memory: 256Mi
    limits:
      cpu: 500m
      memory: 512Mi